--- a/fbtft-bus.c	2014-08-26 17:30:11.721227282 +0800
+++ b/fbtft-bus.c	2014-08-26 17:29:19.697227666 +0800
@@ -39,8 +39,13 @@
 	}                                                                     \
 									      \
 	*buf = modifier((type)va_arg(args, unsigned int));                    \
-	if (par->gpio.dc != -1)                                               \
-		gpio_set_value(par->gpio.dc, 0);                              \
+	if (par->gpio.dc != -1) {                                             \
+	   if( gpio_cansleep(par->gpio.dc) ==0) {			\
+		gpio_set_value(par->gpio.dc, 0);		              \
+	   } else { 							    \
+		gpio_set_value_cansleep(par->gpio.dc, 0);                     \
+	   } 								    \
+	}								     \
 	ret = par->fbtftops.write(par, par->buf, sizeof(type)+offset);        \
 	if (ret < 0) {                                                        \
 		va_end(args);                                                 \
@@ -58,7 +63,11 @@
 			*buf++ = modifier((type)va_arg(args, unsigned int));  \
 		}                                                             \
 		if (par->gpio.dc != -1)                                       \
-			gpio_set_value(par->gpio.dc, 1);                      \
+		   if(gpio_cansleep(par->gpio.dc)==0) {			    \
+			gpio_set_value(par->gpio.dc,1);			      \
+		   } else {						   \
+			gpio_set_value_cansleep(par->gpio.dc, 1);            \
+		   }							   \
 		ret = par->fbtftops.write(par, par->buf, len * (sizeof(type)+offset)); \
 		if (ret < 0) {                                                \
 			va_end(args);                                         \
@@ -144,8 +153,13 @@
 	remain = len / 2;
 	vmem16 = (u16 *)(par->info->screen_base + offset);
 
-	if (par->gpio.dc != -1)
+	if (par->gpio.dc != -1) {
+	   if(gpio_cansleep(par->gpio.dc)==0) {
 		gpio_set_value(par->gpio.dc, 1);
+	   } else {
+		gpio_set_value_cansleep(par->gpio.dc, 1);
+	   }
+	}
 
 	/* non buffered write */
 	if (!par->txbuf.buf)
@@ -247,8 +261,13 @@
 
 	vmem16 = (u16 *)(par->info->screen_base + offset);
 
-	if (par->gpio.dc != -1)
-		gpio_set_value(par->gpio.dc, 1);
+	if (par->gpio.dc != -1) {
+	   if(gpio_cansleep(par->gpio.dc) ==0) {
+		gpio_set_value(par->gpio.dc,1);
+	   } else {
+		gpio_set_value_cansleep(par->gpio.dc, 1);
+	   }
+	}
 
 	/* no need for buffered write with 16-bit bus */
 	return par->fbtftops.write(par, vmem16, len);
